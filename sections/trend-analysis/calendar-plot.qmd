---
author: David Carslaw
---

# 污染日历图 {#sec-calendarPlot}

## 目的

有时候用大家已经熟悉的方式来进行可视化数据会更加高效，日历图就是这样一种展示日数据的非常好的方式。`calendarPlot` 函数将污染物的每日浓度以日历表的形式展示出来，具体的排版和数据呈现还可以进一步定制。默认情况下，`calendarPlot`日历图中每一天的小格子里显示的是这一天的日期，如果数据当中包含风速和风向数据，也可以在其中展示一个风向箭头，箭头的方向和长度对应这一天矢量平均后的平均风向和风速，这样可以清晰的看到风场影响因子的逐日变化情况。

`calendarPlot` 也可以将污染物日均浓度的数值显示在日历的每一天当中，并且在日均值（或最大值）超过某一浓度限制时高亮显示。这样可以更清晰的看到超标天的分布情况，如日均值超过50微克/立方米。

`calendarPlot` 能够按照类别进行着色渲染，这主要是为了用不同的颜色对于各空气质量指数级别，即将不同的浓度区间指定为“优”、“良”、“轻度污染”等。

## 日历图示例

函数的调用与其它函数类似，最少需要指定一个数据框、一种污染物和一个年份，下图显示的是2003年 O~3~ 浓度的日历图。注意如果没有指定 `year` 会显示数据集中包含的所有时段。 

```{r}
#| label: fig-calendarPlot
#| fig-cap: 使用`calendarPlot()` 绘制的2003年 O~3~ 污染日历图.
#| fig-width: 6
#| fig-height: 8
library(openair)
calendarPlot(mydata, pollutant = "o3", year = 2003)
```

在很多情况下，需要在日历图中显示日期以外的其它信息，比如代表主导风向的箭头，或者使用 `annotate = "value"` 选项显示每一天的日均浓度值。在显示浓度值的时候还可以通过`lim`指定一个阈值，来区分低于和高于这个阈值的数据的显示方式，如颜色、字号、是否加粗等。

@fig-calendarPlotExceed 为了突出年内 PM~10~ \> 50 微克/立方米的天，将超过这个阈值的天的浓度值设置为字体加大、加粗并使用桔黄色。

[openair]{.pkg} 中提供了几个函数帮助监测数据的汇总统计，比如 `rollingMean` 用来计算 O~3~ 的8小时滑动平均值，接下来只需要使用 `statistic = "max"` 就可以得到 O~3~ 的每日最大8小时滑动平均值了。

```{r}
#| label: fig-calendarPlotExceed
#| fig-cap: 使用`calendarPlot()` 绘制的2003年 PM~10~ 污染日历图，显示 PM~10~ 浓度值，并对大于50微克/立方米的情况高亮显示。
#| fig-width: 8
#| fig-height: 6
calendarPlot(mydata,
  pollutant = "pm10", year = 2003,
  annotate = "value",
  lim = 50,
  cols = "Purples",
  col.lim = c("black", "orange"),
  layout = c(4, 3)
)
```

下例 (@fig-calendarPlot2)展示了如何使用风向箭头作为日历注释。

```{r}
#| label: fig-calendarPlot2
#| fig-cap: 使用`calendarPlot()` 绘制的2003年 O~3~ 污染日历图。使用风向箭头作为每日的注释，箭头的长短代表风速的大小。可以看到图中四月18和19日臭氧的重污染都发生在比较强的东北风条件下。
#| fig-height: 8
#| fig-width: 6
#| out-width: 80%
calendarPlot(mydata,
  pollutant = "o3", year = 2003,
  annotate = "ws"
)
```

嵌套使用 `selectByDate` 可以进行数据的筛选，这里也不例外，下面例子仅绘制夏季几个月的O~3~情况： 

```{r}
#| eval: false
calendarPlot(
  selectByDate(mydata,
    year = 2003,
    month = c(6, 7, 8)
  ),
  pollutant = "o3", year = 2003
)
```

@fig-calendarPlotCategor 是一个分级处理数据并进行颜色渲染的示例。这里我们使用 `labels` 和 `breaks` 选项分别定义污染物的浓度范围和对应的文字描述。注意 `breaks` 的个数要比 `labels` 多一个。@fig-calendarPlotCategor 使用当日最大浓度绘制日历图，浓度在0-50之间被定义为“优”（very low），50-100之间为“良”（low），以此类推。`breaks` 中的上限值需要设置为比数据中最大值还要大的数值以确保所有的数据都能被包含进来。日历图经常用于将每日浓度和国家或者国际的空气质量指数级别相关联。

```{r}
#| label: fig-calendarPlotCategor
#| fig-cap: 使用`calendarPlot()` 绘制的2003年 NO~2~ 浓度日历图，使用用户自定义浓度段进行填色。
#| fig-width: 8
#| fig-height: 6
calendarPlot(mydata,
  pollutant = "no2", year = 2003,
  breaks = c(0, 50, 100, 150, 1000),
  labels = c("Very low", "Low", "High", "Very High"),
  cols = "increment", statistic = "max"
)
```

用户也可以为每一个浓度段设置指定的颜色：

```{r}
#| label: fig-calendarPlotCols
#| eval: false
#| fig-cap: A `calendarPlot()` with user-defined colour intervals.
calendarPlot(mydata,
  pollutant = "no2", year = 2003,
  breaks = c(0, 50, 100, 150, 1000),
  labels = c("Very low", "Low", "High", "Very High"),
  cols = c("lightblue", "forestgreen", "yellow", "red"),
  statistic = "max"
)
```

为了使代码更清晰和易于维护，可以先定义数据进行分段和分段标签，然后再引用定义好的分段设置进行绘图，例如：

```{r}
#| label: fig-CalendarBreaks
#| eval: false
#| fig-cap: A `calendarPlot()` with user-defined labels.
breaks <- c(0, 34, 66, 100, 121, 141, 160, 188, 214, 240, 500)
labels <- c(
  "Low.1", "Low.2", "Low.3", "Moderate.4", "Moderate.5", "Moderate.6",
  "High.7", "High.8", "High.9", "Very High.10"
)

calendarPlot(mydata,
  pollutant = "no2", year = 2003,
  breaks = breaks, labels = labels,
  cols = "turbo", statistic = "max"
)
```

为了得到臭氧的每日最大滑动8小时平均值，可按照下面的示例先用 `rollingMean()` 函数对数据进行预处理，然后再通过最大值统计选项绘图。

```{r}
#| label: CalendarAvg
#| eval: false
#| fig-cap: A `calendarPlot()` showing rolling 8-hour mean ozone concentrations.
## makes a new field 'rolling8o3'
dat <- rollingMean(mydata, pollutant = "o3", hours = 8)
breaks <- c(0, 34, 66, 100, 121, 141, 160, 188, 214, 240, 500)
labels <- c(
  "Low.1", "Low.2", "Low.3", "Moderate.4", "Moderate.5", "Moderate.6",
  "High.7", "High.8", "High.9", "Very High.10"
)

calendarPlot(
  dat,
  pollutant = "rolling8o3",
  year = 2003,
  breaks = breaks,
  labels = labels,
  cols = "daqi",
  statistic = "max"
)
```

英国对O~3~、NO~2~、PM~10~ 和PM~2.5~等几项污染物的空气质量指数进行了规定，详细信息可以参考(http://uk-air.defra.gov.uk/air-pollution/daqi)和 @COMEAP2011 。在为公众提供空气质量相关信息的时候会更多的使用指数，尤其是预报信息。这里要注意的是在计算指数的时候，不同的污染物可能对应不用的评价时间，比如：O~3~使用8小时滑动平均值，NO~2~使用小时值，PM~10~和PM~2.5~则使用固24小时平均值。

下面的代码按照技术规范为每种污染物预设了浓度分段和对应的指数级别描述，这样在接下来使用 `calendarPlot()` 画图的时候就方便多了。

```{r}
#| label: fig-AQIndex
#| fig-cap: A DAQI `calendarPlot()`

## import UK daily air quality info
pt4_daqi <-
  importUKAQ(
    site = "pt4",
    year = 2021,
    data_type = "daqi"
  )

## the labels - same for all species
labels <- c(
  "1 - Low",
  "2 - Low",
  "3 - Low",
  "4 - Moderate",
  "5 - Moderate",
  "6 - Moderate",
  "7 - High",
  "8 - High",
  "9 - High",
  "10 - Very High"
)

# make calendar plot
calendarPlot(
  # just get pm10 data
  mydata = subset(pt4_daqi, pollutant == "pm10"),
  # out "pollutant" is the poll_index column
  pollutant = "poll_index",
  # our breaks - use 0.5 as the breaks need to be between indices
  breaks = seq(0.5, 10.5, 1),
  # set labels (above)
  labels = labels,
  # built-in DAQI colours
  cols = "daqi"
)
```
