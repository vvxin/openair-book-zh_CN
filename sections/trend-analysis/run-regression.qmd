---
author: David Carslaw
---

# Dilution lines and pollutant ratios {#sec-runRegression}

## 背景 {#run-regression-sec-timePropBack}

理解不同污染源对某项污染物浓度的影响非常困难，因为大气中污染物的变化规律极其复杂。但是，由于扩散稀释过程在任何时间尺度上都会占据主导作用，而一个污染源所形成的烟羽在扩散稀释过程中内部多种污染物之间的比例在没有损失（如沉降和化学反应消耗）的情况下应该是相对恒定的。因此如果我们利用这一特征，同时考虑两种污染物的浓度变化，则有可能突破原本的复杂性，建立一个新的分析方法。

@bentley2004 以一系列有趣的方式研究了两种污染污染之间的关系，尽管这些方法后来并没有被广泛应用，但仍有借鉴意义。@bentley2004 着重研究两种污染物之间的比例关系并和污染源清单进行比较，这个方法旨在将本地源排放的特征和背景特征结合起来进行分析，但是由于两方面都是动态变化的，所以要得到与主要污染源关联的环境中污染物的比例关系也是比较困难的。@farren2023a 尝试把这种方法应用于高时间分辨率数据（1赫兹）来量化机动车排放的影响。

利用局地污染源羽流在扩散过程中两种污染物的比值保持不变这一基本认识，我们的具体方法是在时间序列数据中观察和寻找两种污染物比值保持恒定的时间片段。以小时数据为例，以线性回归来滚动分析连续3小时内两种污染物之间的关系，确定其比例（即回归计算得到的斜率）是否保持恒定（或接近很定）。一般情况下，如果 R^2^ 很高（\> 0.9 到 0.95），则认为存在两项污染物比值恒定的情况，这通常是由本地污染排放带来的。注意回归计算是滚动进行的，如1-3点，然后2-4点，以此类推。下面我们通过示例进一步阐述。

## 示例 {#run-regression-sec-timePropEx}

在这里例子中，我们导入一个路边站2022年的监测数据，不含模型产出的气象参数（因此 `meteo = FALSE`）。然后合并单独下载的同时段的地面气象站数据。

```{r}
#| label: importRunRegres
#| eval: false
# load packages for this section
library(tidyverse)
library(openair)
library(worldmet)

aq <- importAURN("my1", year = 2022, meteo = FALSE)
met <- importNOAA(year = 2022)
aq <- left_join(aq, met, by = "date")

```

```{r}
#| echo: false
#| cache: false
library(tidyverse)
library(openair)
library(worldmet)

aq <- readRDS(here::here("data/my1_2022.rds"))
```

接下来，我们针对 PM~2.5~ 和 NO~x~ 两项污染物进行每3小时的滚动回归计算。返回的数据框（`out`）包含滚动的3小时回归拟合结果以及其可用于制图和后续处理的数据。

```{r}
x <- "nox"
y <- "pm2.5"
out <- runRegression(aq, x = x, y = y, run.len = 3)

# look at returned data
out
```

返回文件中是回归拟合的全部结果，我们先筛选得到拟合结果较好的那一部分（R^2^ \> 0.95），然后进一步删选 NO~x~ 在3小时内出现浓度跳变的记录，这些跳变主要是由本地污染源引起的，也是我们最关注的。最后我们去除斜率的异常值，这可以使生成的图表看起来更清晰、更易于理解。

```{r}
# select good fits
out_filter <- filter(
  out,
  r_squared > 0.95,
  slope > quantile(slope, probs = .01, na.rm = TRUE),
  slope < quantile(slope, probs = .99, na.rm = TRUE),
  delta_nox > 100
)
```

接下来要做的是在原始的数据集中把筛选后的数据（`out_filter`）标记出来以便做更多有用的分析。下面代码演示如果进行标记然后合并为单一数据集。


```{r}
# original data in selection
aq_select <-
  map(1:nrow(out_filter), function (i)
    filter(
      aq,
      date >= out_filter$date_start[i],
      date <= out_filter$date_end[i]
    ) %>%
      mutate(slope = out_filter$slope[i])) %>%
  list_rbind()
```

下面的几张图将更清晰的展示这个分析的目的。@fig-nox-pm25 显示了筛选后数据中 NO~x~ 和 PM~2.5~ 的浓度关系，可以看出针对给定浓度的 NO~x~ ，PM~2.5~ 浓度有很大的变化空间。

```{r}
#| label: fig-nox-pm25
#| fig-cap: Relationship between hourly NO~x~ and PM~2.5~ for filtered data at Marylebone Road for 2022.
#| fig-width: 4.5
#| fig-height: 4.5
#| cache: false
# use a light theme
theme_set(theme_light())

ggplot(aq_select, aes(.data[[x]], .data[[y]])) + 
  geom_point() +
  ylab(quickText("pm2.5 (ug/m3)")) +
  xlab(quickText("nox (ug/m3)"))
```

下面我们将绘制“稀释线”————即筛选后的滚动回归分析结果。@fig-dilution-lines 使用和 @fig-nox-pm25 相同的数据集绘制，与 @fig-nox-pm25 中看似杂乱无章的散点相比，@fig-dilution-lines 最突出的特征就是让我们发现在这些3小时的浓度变化片段中有那么多的斜率如此相近。注意这里使用的是经过筛选的 NO~x~ 浓度有跳变的数据，所以 @fig-dilution-lines 显示的是与之相对应的 PM~2.5~ 的浓度变化，结论是两种污染物的变化高度相关。

@fig-dilution-lines 中的稀释线以每个时间片段中的 PM~2.5~ 最小浓度值着色，这可以视为 PM~2.5~ 背景浓度（每个时间片段上的y轴截距）。对 @fig-dilution-lines 的最终解释是在不同时间片段中 PM~2.5~ 的背景浓度可能差异很大，但是仍在存在一个本地叠加的污染源，使得 PM~2.5~ 和 NO~x~ 的比值保持基本恒定。

```{r}
#| label: fig-dilution-lines
#| fig-cap: Relationship between hourly NO~x~ and PM~2.5~ for filtered data at Marylebone Road for 2022. In this case the 3-hour 'dilution lines' are shown where the lnear regression R^2^ is > 0.95 and the change in NO~x~ is > 100 μg m^-3^.
#| cache: false
#| fig-width: 5.4
#| fig-height: 4
# sticks
x1 <- paste0(x, "_1")
x2 <- paste0(x, "_2")
y1 <- paste0(y, "_1")
y2 <- paste0(y, "_2")

ggplot(out_filter, aes(
  x = .data[[x1]],
  y = .data[[y1]],
  xend = .data[[x2]],
  yend = .data[[y2]], 
  colour = .data[[y1]]
)) +
  geom_segment() +
  scale_color_gradientn(colours = openColours("turbo", 100)) +
  guides(col = guide_colourbar(title = quickText("Background\nPM2.5"))) +
  ylab(quickText("pm2.5 (ug/m3)")) +
  xlab(quickText("nox (ug/m3)"))
```

为了从 @fig-dilution-lines 中获得更多的定量信息，可以提取所有的斜率值并绘制为密度分布图。此外，还可以进一步研究其分布特征，如图 @fig-mode-plot 所示。结果显示，PM~2.5~/NO~x~ 浓度比值的众数落在0.04左右。考虑到分析的对象是“扩散稀释过程”，NO~x~ 浓度的变化如此之大，应当是体现交通污染源特征的 PM~2.5~/NO~x~ 比值，其中既包含了直接的尾气排放也包括非尾气的排放。注意，如果我们把 NO~x~ 的跳变阈值更改为 50 μg m^-3^，得到的比值众数和阈值为 100 μg m^-3^ 是非常接近（0.039）。这个结果是合理的，因为不论是50还是100μg m^-3^ 的跳变都是比较剧烈的，都应该能够体现出近距离污染源所造成的影响。[^run-regression-1]

[^run-regression-1]: 取 100 μg m^-3^ 作为阈值主要是为了让图表看起来不至于过于密集。

在 @fig-dilution-lines 和 @fig-mode-plot 中可以注意到，尽管他们看起来相对一致，但是斜率仍然在一定范围内存在分布。这是可以预期的，分析原因如下。首先，即使提取的稀释线与交通污染源百分之百相关，NO~x~ 与PM~2.5~的排放速率也不会是恒定的。其次，稀释线仍然可能在某种程度上受到背景污染变化的影响。第三，仍然可能受到其它污染源的影响。然而无论怎样，@fig-dilution-lines 中显示的稀释线斜率都是具有显著一致性的。

```{r}
#| label: fig-mode-plot
#| fig-cap: Distribution of slopes as a density plot with the estimated mode value of the slopes shown.
#| cache: false
#| fig-width: 4.5
#| fig-height: 4.5
# mode estimate
density_estimate <- density(out_filter$slope)
mode_value <- density_estimate$x[which.max(density_estimate$y)]

# density plot
ggplot(out_filter, aes(x = slope)) +
  geom_density() +
  theme_minimal() +
  geom_vline(xintercept = mode_value,
             lty = 5,
             colour = "tomato") +
  geom_text(
    x = 0.11,
    y = 8,
    label = paste("Mode =", round(mode_value, 3)),
    colour = "tomato",
    size = 4
  ) +
  coord_cartesian(xlim = c(0, 0.2))

```

As a final step, we can explore the filtered data further. For example, we might want to explore the extent to which the ratio of PM~2.5~/NO~x~ varies by wind direction and wind speed. A polar plot of NO~x~ concentrations (not shown for 2022 data but easily plotted), shows the dominance of southerly winds and the influence of vehicles on Marylebone Road. This is shown in @fig-polar-slope, which highlights that there is quite a lot of variation in the slope value by wind direction. Focusing only on southerly winds (where there is a dominant traffic effect), the ratio of PM~2.5~/NO~x~ is lower in the south-west quadrant than the south-east quadrant, which might reflect different vehicle emissions behaviour along the road. Note that in plotting @fig-polar-slope, Nonparametric Wind Regression (see @sec-polar-NWR) was used because the filtered data does not contain enough information to use a GAM.

```{r}
#| label: fig-polar-slope
#| fig-cap: Polar plot of the slope of PM~2.5~/NO~x~ from the run-regression analysis using filtered data. Note that 
#| cache: false
#| fig-width: 4.5
#| fig-height: 4.5
polarPlot(aq_select, pollutant = "slope", statistic = "nwr")
```
