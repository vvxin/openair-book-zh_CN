---
author: David Carslaw
---

# 时间序列图 {#sec-timePlot}

## 背景 {#sec-timePlotBack}

`timePlot` 函数用于快速绘制污染物浓度变化的时间序列，这恐怕是空气污染分析中最常做的一件事。在这个过程中，我们需要能够将几种污染物（以及其它可能的参数）绘制在同一个时间轴上，并且可以方便选取我们关注的时间段。It will plot time series of type `Date` and hourly and high time resolution data.

以 [ggplot2]{.pkg} 为代表的很多软件包都可以轻松的绘制时间序列图，但是 `timePlot` 的优势是可以灵活的处理时间的聚合周期以及添加风速和风向的注释图标。

本函数允许用户对时间序列图进行精细的设置，如曲线线条的类型、颜色和粗细等。当选定了多个污染物时，时间序列图会将每种污染物画在有独立刻度的面板中然后紧凑的排列在一起（栅栏图）。如果需要在一个面板中同时查看多种污染的“升高或降低”趋势，可以使用 `group =   TRUE`，在这种情况下通常会同时使用 `normalise = "mean"`。后者为归一化选项，它将污染物的浓度与其算术平均值相除，这样不同的污染物就可以在*同一个标度下*进行比较了。`normalise`选择还会读取一个字符串类型的日期（英国格式 dd/mm/YYYY）作为归一化的基准，在这个时间点上所有的数据都被归一化为100。使用归一化的方法可以将不同类型和使用不同单位的时间序列数据放在一起进行趋势比较，如污染源排放数据和环境空气质量监测数据。

在 `timePlot`中可以嵌套使用 `selectByDate` 函数来在数据集中快速选择特定的分析时段。 @sec-selectByDate 中通过示例介绍了如何在数据框中基于日期和时间选定子集。

`timePlot` 的另一个有用的功能时可以按照不同的时间尺度对数据进行聚合。这样我们可以使用小时数据来绘制日均值或月均值的时间序列图，也可以使用15分钟数据绘制小时均值的时间序列图。可以查看 `avg.time` 选项的在线文档，本书@sec-timeAverage 也对如何对数据进行时间聚合给出了完整的介绍。

## 时间序列图实例

在帮助文档中提供了使用本函数的示例代码————可以通过 `?timePlot` 进行查看。最基本的用法就是直接调用函数同时提供污染物名。如绘制 NO~x~ 和 O~3~ 的时间序列图，采用分面板模式并且各污染物使用独立刻度。

```{r}
#| eval: false
timePlot(mydata, 
         pollutant = c("nox", "o3"), 
         y.relation = "free")
```

Often it is necessary to only consider part of a time series and using the [openair]{.pkg} function `selectByDate` makes it easy to do this. Some examples are shown below.

如果仅需要绘制数据集中的部分时间段，可以使用[openair]{.pkg} 中的 `selectByDate` 函数。示例如下。

只绘制2003年的数据：

```{r}
#| eval: false
timePlot(selectByDate(mydata, year = 2003), 
         pollutant = c("nox", "o3"), 
         y.relation = "free")
```

绘制多个污染物参数在2003年8月的时间序列图，见@fig-timePlot.

```{r}
#| label: fig-timePlot
#| fig-cap: 使用 `timePlot` 和 `selectByDate` 函数绘制多参数的时间序列图。数据选定为2003年8月。
#| fig-width: 8
#| fig-height: 8
library(openair)
library(tidyverse)

timePlot(selectByDate(mydata, year = 2003, month = "aug"),
         pollutant = c("nox", "o3", "pm25", "pm10", "ws"),
         y.relation = "free")
```

更多的示例代码如下：

```{r}
#| eval: false
## plot monthly means of ozone and no2
timePlot(mydata, pollutant = c("o3", "no2"), avg.time = "month",
         y.relation = "free")

## plor 95th percentile monthly concentrations
timePlot(mydata, pollutant = c("o3", "no2"), avg.time = "month",
         statistic = "percentile", percentile = 95,
         y.relation = "free")

## plot the number of valid records in each 2-week period
timePlot(mydata, pollutant = c("o3", "no2"), avg.time = "2 week",
         statistic = "frequency", y.relation = "free")
```

@fig-timePlotNorm 是一个将数据进行归一化的示例，我们使用了如下设置：

-   将数据聚合为年均值;

-   以2008年起始点为基准进行均一化；

-   设置线条的宽度为4，线型为1（实现）；

-   选择将多个曲线绘制在同一个面板中。

从 @fig-timePlotNorm 可以看出在1998-2005年间，NO~2~ 和 O~3~ 的浓度水平出现了上涨；SO~2~ 和 CO 的降幅最大（达到60%），NO~x~ 的浓度下降了约20%。

```{r}
#| label: fig-timePlotNorm
#| fig-cap: 以1998年起始点为基础绘制归一化的时间序列图
#| fig-width: 7
#| fig-height: 5
#| out-width: 70%
timePlot(mydata, 
         pollutant = c("nox", "no2", "co", "so2", "pm10"),
         avg.time = "year", normalise = "1/1/1998", 
         lwd = 4, lty = 1,
         group = TRUE, ylim = c(0, 120))
```

另一种情况是把*几个站点*的污染物时间序列绘制在一起。下面的例子导入了三个站点的数据然后将NO~x~的时间序列绘制在栅栏图中。

```{r}
#| label: fig-importAQdata
#| fig-cap: 以栅栏图的形式绘制三个站点 NO~x~ 浓度的时间序列。
#| fig-width: 7
#| fig-height: 4
## import data from 3 sites
aq <- importAURN(site = c("kc1", "my1", "nott"), 
                      year = 2005:2010)

## plot it
timePlot(aq, pollutant = "nox", 
         type = "site", 
         avg.time = "month")
```

使用上面例子中的代码也可以同时绘制几种污染物的时间序列。但是如何将几个站点的 NO~x~ 浓度变化绘制在一个面板中呢？接下来展示具体的操作步骤。这里为了简化最终形成的参数名，我们舍弃的完整冗长的站名，替之以站点代码。

```{r}
#| label: reshapeData
## first drop site name
aq <- select(aq, -site)

## now reshape the data using the tidyr package
aq <- pivot_wider(aq, id_cols = date, 
                       names_from = code, 
                       values_from = co:air_temp)

names(aq)
```

The final step will make columns of each site/pollutant combination e.g. `nox_KC1`, `pm10_KC1` and so on. It is then easy to use any of these names to make the plot (with a few plotting option enhancements):
上面的代码为每一个站点/污染物的组合展开为独立的参数列，如`nox_KC1`, `pm10_KC1` 等，接下来只需要简单设置几个选项就可以引用新生成的参数名绘制想要的时间序列图了。

```{r}
#| label: fig-plotGroup
#| fig-cap: 在一个面板中绘制三个站点 NO~x~ 浓度的时间序列。
#| fig-width: 7
#| fig-height: 5
#| out-width: 70%
timePlot(aq, 
         pollutant = c("nox_KC1", "nox_MY1", "nox_NOTT"),
         avg.time = "month", group = TRUE,
         lty = 1, lwd = c(1, 3, 5),
         ylab = "nox (ug/m3)"
         )
```

An alternative way of selecting all columns containing the character 'nox' is to use the `grep` command. For example:
另一个筛选所有包含“nox”字符的参数项的方法是使用 `grep` 函数。例如：

```{r}
#| eval: false
timePlot(thedata, pollutant = names(thedata)[grep(pattern = "nox", 
                                                  names(thedata))],
         avg.time = "month", group = TRUE)
```

如果数据集中包含风速 `ws` 和风向 `wd` 数据，那么可以在时间序列图中加入 “风向量” 箭头。这种污染物浓度变化和风场条件相结合的绘图方式非常适合相对短时间范围内的污染分析，比如持续几天的一次污染过程。@fig-timePlotwswd 展示了数据集中前48小时内 NO~x~ 和 NO~2~ 的浓度与风矢量组合时间序列图。箭头的长度、外形和颜色可以通过一个参数列表来定制。箭头的最大长度通过 `scale` 参数项定义为对整个产出图形的分数比例。注意，如果手动调整了产出图形的大小，那么需要将时间序列图从新生成一次以确保风矢量箭头的方向正确。[lattice]{.pkg} 包中针对 `panel.arrows` 的其它设置都可以放到参数列表中，如 `length` 可以控制箭头头部的长短，`angle` 可以控制箭头头部的展开角度。风矢量箭头也可以在 `scatterPlot` 函数中应用。

```{r}
#| label: fig-timePlotwswd
#| fig-cap: 在 `timePlot` 中使用 `windflow` 选项的示例。
#| fig-width: 9
#| fig-height: 5
#| out-width: 90%
timePlot(head(mydata, 48), pollutant = c("nox", "no2"), 
         windflow = list(scale = 0.1, lwd = 2, 
                         col = "turquoise4"), 
         lwd = 3, group = FALSE, 
         ylab = "concentration (ug/m3)")
```
