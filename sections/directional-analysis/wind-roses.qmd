---
author: David Carslaw
editor_options: 
  markdown: 
    wrap: 72
---

# 风玫瑰图和污染玫瑰图 {#sec-windRose}

风玫瑰图（也叫风向玫瑰图或风向频率玫瑰图）可以直观的反映一地的风速和风向情况。通过逐年的风玫瑰图能够看出风场条件的年际变化。 `windRose` 函数用于绘制风玫瑰图，可以将所有风速和风向数据绘制在一起，也可以绘制逐年或追月的风玫瑰图，其中逐月的风玫瑰图能够告诉我们气象场在不同季节的差异和变化规律。

风玫瑰图汇总每一个45或30$^\circ$风向区间内出现的频率，同时也划分不用的风速区间。通常，风速用不同宽度的“浆”来表示。风玫瑰图所提供的根本信息是一段时间内从某一个方向以某个速度区间来的风占总时间的比例（这里用的是百分比）。

`windRose`函数也计算“静风”出现的百分比，即风速为零的情形。英国气象局用风向为0度代表静风时段，而一般的正北风则标记为风向360$^\circ$。`calm.thresh` 参数可以将非零的风速值也归类为静风。如：`calm.thresh = 0.5`会将*风速*小于0.5的数据都归为静风。

当风向数据以10度为单位取整的时候，在绘制不是10度区间间隔的风玫瑰图时有可能会出现偏差。比如用10度取证的风场数据绘制22.5$^\circ$的十六方向风玫瑰图，那么在正东、正西、正南、正北这四个方向会包含3个10度区间，而其它方向只包含2个10度区间，这样统计出的风向频率会有明显的偏差。@droppo2008 和 @applequist2012 讨论了这个问题以及解决方法[^wind-roses-1]。[openair]{.pkg} 的 `windRose` 函数使用一个相对简单的方案解决这个问题，即将每个取整风向区间的统计结果按比例重新分布到风玫瑰图的风向区间上。对于上面的情况就是在那4个风向上乘以系数0.75，其余的方向则乘以系数1.125。

[^wind-roses-1]: 感谢加拿大环境署的 Philippe Barneoud 最初发现这个问题。

## 应用实例

首先加载安装包：

```{r}
#| message: false
#| warning: false
library(openair)
library(tidyverse)
```

风玫瑰图函数以最简单的方式运行会得到 @fig-windroseBasic 的样子。

```{r}
#| label: fig-windroseBasic
#| fig-cap: 使用 `windRose` 函数绘制出的风向频率玫瑰图。从图例中可以看到风速被分成了几个区间，图中的灰色圆圈代表不同的频率百分比刻度。
#| fig-width: 5
#| fig-height: 5
#| out-width: 60%
windRose(mydata)
```

@fig-windRoseyear 展示了不同年份风场条件的差异。可以看到2000年西南风盛行，2003年偏东风的比例明显高于常年。也可以使用 `type = "month"` 选项来获得风场条件的季节差异。

```{r}
#| label: fig-windRoseyear
#| fig-cap: 使用 `windRose` 函数绘制出的逐年的风向频率玫瑰图。图例提示了风速区间，图中灰色圆圈上的10%、20%代表该风向出现的频率百分比。
#| fig-width: 8
#| fig-height: 5
windRose(mydata, type = "year", layout = c(4, 2))
```

用 `type` 参数引入一个新的因子来可视化不同参数之间的相关性是[openair]{.pkg} 的典型用法。@sec-cutData 中简述了 [openair]{.pkg} 在绘图过程中增加因子或者将现有数据转换为因子的过程。对于风玫瑰图来说我们会遇到的常见问题是：什么样的气象条件会造成 PM~10~ 的高浓度或低浓度？通过增加 `type = "pm10"` 选项，[openair]{.pkg} 会按照 PM~10~ 浓度的四个*分位*将数据（等）分成四个类别，然后对每个分位浓度段分别绘制风玫瑰图。用户可以自定义分成多少个浓度区间，详见 `?cutData`。从 @fig-windRsPM10 中可以看到，在 PM~10~ 处于低浓度区间时偏北风占比比较大，而在高浓度时（最右边的子图）西南风为主导风向，通过这张图我们可以很好的不同风场条件对某种污染物浓度的影响关系。需要重申的是 [openair]{.pkg} 中几乎所有的函数都可以使用 `type` 这个非常有用的选项。

```{r}
#| label: fig-windRsPM10
#| fig-cap: 四个 PM~10~ 浓度区间条件下的风玫瑰图。区间的分段来自 PM~10~ 的浓度*分位**，具体的分割点浓度值可以在每张子图的小标题上看到。
#| fig-width: 10
#| fig-height: 4
windRose(mydata, type = "pm10", layout = c(4, 1))
```

前文提到的风向频率可能出现偏差的情况可以通过下面代码生成的两幅风玫瑰图明显看出来。

```{r}
#| label: windRoseBias
#| eval: false
## no bias correction
windRose(mydata, angle = 22.5, bias.corr = FALSE)

## bias correction (the default)
windRose(mydata, angle = 22.5)
```

`pollutionRose` 是 `windRose` 的一个变种，用于观察各风向上的污染物浓度，确切的说是特定浓度段的时间占比。Ronald Henry 等在 @henry2009 中介绍了如何用关联风场与污染物来定位污染源的方法模型。

新版本的 [openair]{.pkg} 引入 `pollutionRose` 函数来绘制污染玫瑰图，见@fig-pollutionRoseBasic：

```{r}
#| label: fig-pollutionRoseBasic
#| fig-cap: 使用 `pollutionRose` 默认设置绘制的 NO~x~ 污染玫瑰图。
#| fig-width: 5
#| fig-height: 4
#| out-width: 60%
pollutionRose(mydata, pollutant = "nox")
```

在实现层面，`pollutionRose` 函数其实就是把污染物数据当成风速数据的 `windRose` 函数。`pollutionRose` 会将 `pollutant` 参数选定的污染物进行细致的浓度区间划分（见右侧图例），然后以扇形绘制玫瑰图，其它的选项与 `windRose` 相同。

@fig-pollutionRoseBasic 可以看到高浓度的 NO~x~ 出现在西南风场条件下，这时增加一个条件通常会得到更多有用的信息。比如以 SO~2~ 的浓度高低作为条件再次绘制 NO~x~ 的污染玫瑰图（@fig-pollRoseNOxO2），可以看到高浓度的 NO~x~ 不仅和西南风相关，还同时伴随着 SO~2~ 的高值。另外还可以看到在 SO~2~ 偏高的条件下有一个明显的来着偏方向的 NO~x~。这个特征在 @fig-pollutionRoseBasic 时看不到的。 

```{r}
#| label: fig-pollRoseNOxO2
#| fig-cap: 以 SO~2~ 浓度为附加条件绘制的 NO~x~ 污染玫瑰图。
#| fig-width: 10
#| fig-height: 5
pollutionRose(mydata,
  pollutant = "nox",
  type = "so2",
  layout = c(4, 1),
  key.position = "bottom"
)
```

`pollutionRose` 还可以用来展示各风向对平均浓度的贡献比例。通过 `statistic = "prop.mean"` 选项(proportion contribution to the mean)，可以看到那个方向对污染的贡献最大。如 @fig-pollRoseAttr 所示，西南风明显对这个站点的 NO~x~ 浓度贡献最大，仅西南的两个风向区间就贡献了近一半的浓度。 `polarFreq` 函数也可以得到类似的信息，但是污染玫瑰图由于同时用扇形的长度和颜色表征贡献的程度，其展示的效率更高。

```{r}
#| label: fig-pollRoseAttr
#| fig-cap: 显示对总体平均浓度贡献比例的污染玫瑰图。
#| fig-width: 5
#| fig-height: 5
#| out-width: 60%
pollutionRose(mydata, pollutant = "nox", statistic = "prop.mean")
```

我们有时也需要分析不是盛行风的方向上的污染贡献。比如下面代码的 SO~2~ 的污染玫瑰图中，由于偏东风出现的频率很少，导致这个区间内具体的各区段浓度的构成很难看清。

```{r}
#| label: pollRoseSO2
#| eval: false
pollutionRose(mydata, pollutant = "so2", seg = 1)
```

针对这种情况，可以通过 `normalise = TRUE` 把每一个风向都归一化到 0 和 1 之间，这样每个区间内部的污染浓度分布就可以轻松对比出来了。@fig-pollRoseNorm 是归一化后的污染玫瑰图，尽管东风出现的频率比较低（图上的黑色提示线），但是却相对的出现了最多的 SO~2~ 高值，

```{r}
#| label: fig-pollRoseNorm
#| fig-cap: 按照风向区间作归一化处理后的 SO~2~ 污染玫瑰图。
#| fig-width: 5
#| fig-height: 4
#| out-width: 60%
pollutionRose(mydata,
  pollutant = "so2",
  normalise = TRUE,
  seg = 1,
  cols = "heat"
)
```

## 对比两组气象数据 {#sec-comp-met}

`pollutionRose` 还可以用来对比两组风场数据，常见的场景如：对比两个站点的风场差异，或者对比不同模型产出的风场结果（后面章节会介绍）。这时 `ws` 和 `wd` 会被定义为*参考*数据，另一组数据（`ws2` 和 `wd2`）会被定义为对比数据。`pollutionRose` 在对比两组气象数据时，会用对比数据减去参考数据，之后将插值绘制在风场的极坐标下，正偏差和负偏差会用不同的颜色表示出来。

风场对比图所展示的主要是两组数据之间风向的差异。一般情况下，风场对比图可以同时看到风速和风向的信息
。风速的差异虽然也会被表示出来，*但是只有在风向也同时有差异的时候才行*。当两组数据在某个风向上的频率完全一样，同时在这个方向上风速不一样的时候，风速的差异无法在图上通过颜色显示出来。用户应该知道这种可能发生的情况。

In the next example, some artificial wind direction data are generated
by adding a positive bias of 30\~degrees with some normally distributed
scatter. Also, the wind speed data are given a positive bias. The
results are shown in @fig-pollRoseComp. The Figure clearly shows the
mean positive bias in wind direction i.e. the direction is displaced
from north (no bias). The colour scale also shows the extent to which
wind speeds are biased i.e. there is a higher proportion of positively
biased wind speeds shown by the red colour compared with the negatively
biased shown in blue. Also shown in @fig-pollRoseComp is the mean wind
speed and direction bias as numerical values.

Note that the `type` option can be used in @fig-pollRoseComp e.g.
`type = "month"` to split the analysis in useful ways. This is useful if
one wanted to see whether a site or the output from a model was biased
for different periods. For example, `type = "daylight"` would show
whether there are biases between nighttime and daytime conditions.

```{r}
#| label: fig-pollRoseComp
#| fig-cap: Pollution rose showing the difference between two  meteorological data sets. The colours are used to show whether data tend to be positively or negatively biased with respect to the reference data set.
#| fig-width: 5
#| fig-height: 5
#| out-width: 50%
## $example of comparing 2 met sites
## first we will make some new ws/wd data with a postive bias
mydata <- mutate(mydata,
  ws2 = ws + 2 * rnorm(nrow(mydata)) + 1,
  wd2 = wd + 30 * rnorm(nrow(mydata)) + 30
)

## need to correct negative wd
id <- which(mydata$wd2 < 0)
mydata$wd2[id] <- mydata$wd2[id] + 360

## results show postive bias in wd and ws
pollutionRose(mydata,
  ws = "ws",
  wd = "wd",
  ws2 = "ws2",
  wd2 = "wd2"
)
```

An example of using user-supplied breaks is shown in @fig-pollRoseComp2.
In this case six intervals are chosen including one that spans -0.5 to
+0.5 that is useful to show wind speeds that do not change.

```{r}
#| label: fig-pollRoseComp2
#| fig-cap: Pollution rose showing the difference between two meteorological data sets. The colours are used to show whether data tend to be positively or negatively biased with respect to the reference data set. In this case the example shows how to use user-defined breaks and split the data by day/night for a latitude assumed to be London.
#| fig-width: 8
#| fig-height: 5
#| out-width: 80%
## add some wd bias to some nighttime hours
id <- which(as.numeric(format(mydata$date, "%H")) %in% c(23, 1, 2, 3, 4, 5))
mydata$wd2[id] <- mydata$wd[id] + 30 * rnorm(length(id)) + 120
id <- which(mydata$wd2 < 0)
mydata$wd2[id] <- mydata$wd2[id] + 360

pollutionRose(mydata,
  ws = "ws", wd = "wd", ws2 = "ws2", wd2 = "wd2",
  breaks = c(-11, -2, -1, -0.5, 0.5, 1, 2, 11),
  cols = c("dodgerblue4", "white", "firebrick"),
  type = "daylight"
  )
```
